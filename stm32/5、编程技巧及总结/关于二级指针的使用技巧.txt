一级指针
{
	作用：数据的单向传输  及后级数据向前级指针传输数据。
	特点: 单向数据传输
	如：
	例1： int a; int *c=&a;
		  *c=1;  //此时数据透过指针c由后级传输到前级,方向如： 1 -> c -> a 
		  
	例2: int a;
	void fun(int *p)
	{
		*p = 1; 
	}
	fun(&a); //此时透过指针p间接修改了a的值  数据传输方向 1 -> p -> a;
}

二级指针
{
	作用: 修改外部指针的指向
	例1：int a[10]; //全局数据缓冲区
		 int *p; 
		void getAddress(int **p)
		{
			*p = a;
		}
	p不可以直接获取全局缓冲区的地址, 此时必须通过二级指针获取a的地址, 及getAddress(&p);
}

妙用：
{
	说明：
	1、强制二级指针转换为以及指针传输，但操作当二级指针操作
	int *p; int a[10];
	void getAddress(void *p)
	{
		int *pp = (int *)p; //不可以对void类型指针传输数据
		*pp = a;
	}
	通过getAddress((void *)&p);这样可以操作
}